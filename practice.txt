Some practice problems in Python:

===================================================================
Conditional Problems:

1. Write a function that accepts a string and returns a string as follows:
   - if the input string is 1 or 2 characters in length, return the string: "The string is small"
   - if the input string between 3 and 7 characters in length, return the string: "The string is large"
   - if the input string between 8 characters in length and contains a 'd', return the string: "The string is large with a d"
   - otherwise, return the string: "That's quite unusual"
   

===================================================================
Function Problems:

1. Write a function that accepts a list of numbers and updates each element in the list with its value multipled by 2. 
Given an example input of: [2, 8, 0, 23]  your function would update the list to be: [4, 16, 0, 46]

2. Write a function that accepts a list of numbers and returns a new list containing each input number plus 10
Given an example input of: [10, 30, 36]  your function should return a new list with the values: [20, 40, 46]

3. Write a function that accepts 4 arguments as follows: int, int, string, int. The function should add the first two
arguments, then subtract the 4th argument and return a string containing the 3rd argument followed by the result. 
Given an example input of: 8, 16, "This is the result:", 5  your function return the string: "This is the result: 19"
Use string formatting to make the returned string

4. Memoization: Create a function that accepts as arguments 2 numbers, adds them together, caches that result and then returns 
the result. If you then call the function again with the same arguments, return the cached value. Your implementation
should use a closure (return a nested function).

5. Write a recursive function accepts an integer 'n' argument and calculates the first 'n' numbers of the Fibonacci sequence.
Return the sequence as a list. Make two versions: one recursive and the other non-recursive

6. Write a function that accepts an integer 'n' argument and returns the first 'n' prime numbers as a list. You can 
create a helper function to determine primality

===================================================================
File Problems:

1. Write a function that reads words from the word-list.txt file, and returns the number of words that begin 
with the letter 'g' and also the number of words that begin with the letters 'st'

2. Write a function that reads words from the word-list.txt file (which is sorted in alphabetical order) and creates a 
new file named 'reversed-words.txt' containing the words in revserse alphabetical order. 

===================================================================
Git Workflow Example:

===================================================================
Exception Handling:

===================================================================
Web Application Debugging

===================================================================
Extending Python with C

===================================================================
Classes:

===================================================================
Data Structures Problems:

1. Write a function that accepts a variable number of lists of numbers and returns a new list
containing all the combination of all the input lists with the numbers sorted in decending order

===================================================================
Looping, Generators and Iterators Problems:

===================================================================
HTTP Protocol Problems:



